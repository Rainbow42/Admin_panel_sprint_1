# Generated by Django 3.2.7 on 2021-10-19 18:11

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilmWork',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Рейтинг')),
                ('certificate', models.CharField(blank=True, max_length=4, null=True, verbose_name='Возрастной рейтинг')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Дата выхода фильма')),
                ('file_path', models.FileField(blank=True, null=True, upload_to='film_works/', verbose_name='Директория')),
                ('type', models.CharField(choices=[('series', 'Series'), ('movie', 'Film')], default='movie', max_length=6, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'filmwork',
                'verbose_name_plural': 'filmworks',
                'db_table': '"content"."film_work"',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=250, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=250, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=250, null=True, verbose_name='Отчество')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'persons',
                'db_table': '"content"."person"',
                'index_together': {('first_name', 'last_name', 'patronymic')},
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
                'db_table': 'content"."genre',
                'index_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='FilmWorkPersonsType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('role', models.CharField(blank=True, choices=[('actor', 'Actors'), ('director', 'Director'), ('writer', 'Writer')], max_length=11, verbose_name='Профессия')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('film_work', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork')),
                ('person', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='movies.person')),
            ],
            options={
                'db_table': '"content"."person_film_work"',
                'index_together': {('film_work', 'person')},
            },
        ),
        migrations.CreateModel(
            name='FilmWorkGenres',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('film_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
            ],
            options={
                'verbose_name': 'film genre',
                'verbose_name_plural': 'film genres',
                'db_table': '"content"."genre_film_work"',
                'index_together': {('film_work', 'genre')},
            },
        ),
        migrations.AddField(
            model_name='filmwork',
            name='genre',
            field=models.ManyToManyField(blank=True, related_name='genre', through='movies.FilmWorkGenres', to='movies.Genre'),
        ),
        migrations.AddField(
            model_name='filmwork',
            name='person',
            field=models.ManyToManyField(blank=True, related_name='person', through='movies.FilmWorkPersonsType', to='movies.Person', verbose_name='Персона'),
        ),
        migrations.AlterIndexTogether(
            name='filmwork',
            index_together={('title',)},
        ),
    ]
